/*
 * @Author: Mr.Crab wei17306927526@gmail.com
 * @Date: 2025-05-13 13:59:53
 * @LastEditors: Mr.Crab wei17306927526@gmail.com
 * @LastEditTime: 2025-05-26 15:16:50
 * @FilePath: /workflow-system/src/vite-env.d.ts
 * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
 */
/// <reference types="vite/client" />

declare module '*.vue' {
  import type { DefineComponent } from 'vue'
  const component: DefineComponent<{}, {}, any>
  export default component
}

// 解决Vue Language Server类型检查问题
declare global {
  namespace JSX {
    interface IntrinsicElements {
      [elem: string]: any
    }
  }
  
  // Vue Language Server 全局类型声明
  var __VLS_intrinsicElements: any
  var __VLS_pickFunctionalComponentCtx: any
  var __VLS_WithComponent: any
  var __VLS_pickEvent: any
  var __VLS_FunctionalComponentProps: any
  var __VLS_elementAsFunctionalComponent: any
  var __VLS_componentsOption: any
  var __VLS_name: any
  var __VLS_directiveFunction: any
  var __VLS_withScope: any
  var __VLS_resolvedLocalAndGlobalComponents: any
  var __VLS_makeOptional: any
  var __VLS_styleScopedClasses: any
  var __VLS_normalizeSlot: any
  var __VLS_asFunctionalComponent: any
  var __VLS_PickNotAny: any
  var __VLS_SelfComponent: any
  var __VLS_GlobalComponents: any
  var __VLS_ctx: any
  var __VLS_setup: any
  var __VLS_expose: any
  var __VLS_slots: any
  var __VLS_emit: any
  var __VLS_props: any
  var __VLS_attrs: any
  var __VLS_refs: any
  var __VLS_templateResult: any
  var __VLS_nonNullable: any
  var __VLS_getSlotParams: any
  var __VLS_getVforSourceType: any
  var __VLS_getVforKeyType: any
  var __VLS_getVforIndexType: any
  var __VLS_directiveAsFunction: any
  var __VLS_modelEmitsType: any
  var __VLS_modelPropsType: any
  var __VLS_normalizeEmits: any
  var __VLS_TypePropsToRuntimeProps: any
  var __VLS_ExtractEmits: any
  var __VLS_ExtractProps: any
  var __VLS_IsAny: any
  var __VLS_BuiltInPublicProps: any
  var __VLS_PublicProps: any
  var __VLS_DefineComponent: any
  var __VLS_Component: any
  var __VLS_ComponentProps: any
  var __VLS_ComponentEmits: any
  var __VLS_ComponentSlots: any
  var __VLS_ComponentExposed: any
  var __VLS_Prettify: any
  var __VLS_UnionToIntersection: any
  var __VLS_IsUnion: any
  var __VLS_OverloadUnionInner: any
  var __VLS_OverloadUnion: any
  var __VLS_IntersectionChildren: any
  var __VLS_NormalizeEmits: any
  var __VLS_PrettifyLocal: any
  var __VLS_GlobalAttrs: any
  var __VLS_PickKeysWithDollars: any
  var __VLS_OmitKeysWithDollars: any
  var __VLS_TypedSlots: any
  var __VLS_SlotProps: any
  var __VLS_DefaultSlots: any
  var __VLS_NamedSlots: any
  var __VLS_SlotType: any
  var __VLS_IsStrictlyAny: any
  var __VLS_StrictlyAnyToAny: any
  var __VLS_AnyArray: any
  var __VLS_ForSlots: any
  var __VLS_StrictTemplate: any
  var __VLS_TemplateResult: any
  var __VLS_getSlotParam: any
  var __VLS_getSlotData: any
  var __VLS_directiveBind: any
  var __VLS_directiveOn: any
  var __VLS_directiveSlot: any
  var __VLS_directiveModel: any
  var __VLS_directiveShow: any
  var __VLS_directiveIf: any
  var __VLS_directiveElseIf: any
  var __VLS_directiveElse: any
  var __VLS_directiveFor: any
  var __VLS_directiveOnce: any
  var __VLS_directiveMemo: any
  var __VLS_directiveCloak: any
  var __VLS_directiveText: any
  var __VLS_directiveHtml: any
  var __VLS_directivePre: any
  var __VLS_directiveCustom: any
  var __VLS_allComponents: any
  var __VLS_otherComponents: any
  var __VLS_selfComponent: any
  var __VLS_internalComponent: any
  var __VLS_localComponents: any
  var __VLS_globalComponents: any
  var __VLS_pickComponents: any
  var __VLS_rawComponents: any
  var __VLS_components: any
  var __VLS_componentProps: any
  var __VLS_componentEmits: any
  var __VLS_componentSlots: any
  var __VLS_componentExposed: any
  var __VLS_functionalComponentProps: any
  var __VLS_modelValue: any
  var __VLS_modelModifiers: any
  var __VLS_resolveComponent: any
  var __VLS_resolveDynamicComponent: any
  var __VLS_resolveDirective: any
  var __VLS_withDefaults: any
  var __VLS_mergeDefaults: any
  var __VLS_createSlots: any
  var __VLS_renderSlot: any
  var __VLS_renderList: any
  var __VLS_Fragment: any
  var __VLS_Teleport: any
  var __VLS_Suspense: any
  var __VLS_KeepAlive: any
  var __VLS_BaseTransition: any
  var __VLS_withDirectives: any
  var __VLS_vShow: any
  var __VLS_vModelText: any
  var __VLS_vModelCheckbox: any
  var __VLS_vModelRadio: any
  var __VLS_vModelSelect: any
  var __VLS_vModelDynamic: any
  var __VLS_withKeys: any
  var __VLS_withModifiers: any
  var __VLS_toDisplayString: any
  var __VLS_camelize: any
  var __VLS_capitalize: any
  var __VLS_toHandlerKey: any
  var __VLS_toHandlers: any
  var __VLS_normalizeClass: any
  var __VLS_normalizeStyle: any
  var __VLS_normalizeProps: any
  var __VLS_guardReactiveProps: any
  var __VLS_mergeProps: any
  var __VLS_cloneVNode: any
  var __VLS_isVNode: any
  var __VLS_createVNode: any
  var __VLS_createElementVNode: any
  var __VLS_createCommentVNode: any
  var __VLS_createTextVNode: any
  var __VLS_createStaticVNode: any
  var __VLS_resolveFilter: any
  var __VLS_checkCompatEnabled: any
  var __VLS_isCompatEnabled: any
  var __VLS_softAssertCompatEnabled: any
  var __VLS_warnDeprecation: any
  var __VLS_createApp: any
  var __VLS_createSSRApp: any
  var __VLS_defineComponent: any
  var __VLS_defineAsyncComponent: any
  var __VLS_defineCustomElement: any
  var __VLS_getCurrentInstance: any
  var __VLS_h: any
  var __VLS_inject: any
  var __VLS_hasInjectionContext: any
  var __VLS_provide: any
  var __VLS_nextTick: any
  var __VLS_mergeModels: any
  var __VLS_useModel: any
  var __VLS_useTemplateRef: any
  var __VLS_useId: any
  var __VLS_ref: any
  var __VLS_computed: any
  var __VLS_reactive: any
  var __VLS_readonly: any
  var __VLS_watchEffect: any
  var __VLS_watchPostEffect: any
  var __VLS_watchSyncEffect: any
  var __VLS_watch: any
  var __VLS_isRef: any
  var __VLS_unref: any
  var __VLS_toRef: any
  var __VLS_toValue: any
  var __VLS_toRefs: any
  var __VLS_isProxy: any
  var __VLS_isReactive: any
  var __VLS_isReadonly: any
  var __VLS_isShallow: any
  var __VLS_customRef: any
  var __VLS_triggerRef: any
  var __VLS_shallowRef: any
  var __VLS_shallowReactive: any
  var __VLS_shallowReadonly: any
  var __VLS_markRaw: any
  var __VLS_effectScope: any
  var __VLS_getCurrentScope: any
  var __VLS_onScopeDispose: any
  var __VLS_onMounted: any
  var __VLS_onUpdated: any
  var __VLS_onUnmounted: any
  var __VLS_onBeforeMount: any
  var __VLS_onBeforeUpdate: any
  var __VLS_onBeforeUnmount: any
  var __VLS_onErrorCaptured: any
  var __VLS_onRenderTracked: any
  var __VLS_onRenderTriggered: any
  var __VLS_onActivated: any
  var __VLS_onDeactivated: any
  var __VLS_onServerPrefetch: any
  var __VLS_useCssModule: any
  var __VLS_useCssVars: any
  var __VLS_Transition: any
  var __VLS_TransitionGroup: any
  var __VLS_version: any
  var __VLS_compile: any
}

export {}
